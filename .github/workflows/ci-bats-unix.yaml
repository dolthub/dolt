name: Test Bats Unix

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'go/**'
      - 'integration-tests/**'

concurrency:
  group: ci-bats-unix-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Bats tests
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-22.04, macos-latest ]
        dolt_fmt: [ "__DOLT__", "__DOLT_DEV__", "__LD_1__" ]
        exclude:
          - os: "macos-latest"
            dolt_fmt: ["__DOLT_DEV__", "__LD_1__" ]
    env:
      use_credentials: ${{ secrets.AWS_SECRET_ACCESS_KEY != '' && secrets.AWS_ACCESS_KEY_ID != '' }}
    steps:
      - name: Conditionally Set ENV VARS for AWS tests
        run: |
          if [[ $use_credentials == true ]]; then
            echo "AWS_SDK_LOAD_CONFIG=1" >> $GITHUB_ENV
            echo "AWS_REGION=us-west-2" >> $GITHUB_ENV
            echo "DOLT_BATS_AWS_TABLE=dolt-ci-bats-manifests-us-west-2" >> $GITHUB_ENV
            echo "DOLT_BATS_AWS_BUCKET=dolt-ci-bats-chunks-us-west-2" >> $GITHUB_ENV
            echo "DOLT_BATS_AWS_EXISTING_REPO=aws_remote_bats_tests" >> $GITHUB_ENV
          fi
      - name: Configure AWS Credentials
        if: ${{ env.use_credentials == 'true' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 3600
      - name: Setup Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19
        id: go
      - name: Setup Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: ^3.6
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ^16
      - name: Create CI Bin
        run: |
          mkdir -p ./.ci_bin
          echo "$(pwd)/.ci_bin" >> $GITHUB_PATH
      - name: Install Bats
        run: |
          npm i bats
          echo "$(pwd)/node_modules/.bin" >> $GITHUB_PATH
        working-directory: ./.ci_bin
      - name: Install Python Deps
        run: |
          pip install mysql-connector-python
          pip install pandas
          pip install pyarrow
      - name: Install Dolt
        working-directory: ./go
        run: |
          go build -mod=readonly -o ../.ci_bin/dolt ./cmd/dolt/.

          go build -mod=readonly -o ../.ci_bin/remotesrv ./utils/remotesrv/.
          go build -mod=readonly -o ../.ci_bin/noms ./store/cmd/noms/.
      - name: Setup Dolt Config
        run: |
          dolt config --global --add user.name 'Dolthub Actions'
          dolt config --global --add user.email 'actions@dolthub.com'
      - name: Install expect
        if: matrix.os == 'ubuntu-22.04'
        run: sudo apt-get install -y expect
      - name: Install Maven
        working-directory: ./.ci_bin
        run: |
          curl -LO https://dlcdn.apache.org/maven/maven-3/3.8.6/binaries/apache-maven-3.8.6-bin.tar.gz
          tar -xf apache-maven-3.8.6-bin.tar.gz
          echo "$(pwd)/apache-maven-3.8.6/bin" >> $GITHUB_PATH
      - name: Install Hadoop
        working-directory: ./.ci_bin
        run: |
          curl -LO https://downloads.apache.org/hadoop/common/hadoop-3.3.4/hadoop-3.3.4.tar.gz
          tar xvf hadoop-3.3.4.tar.gz
          echo "$(pwd)/hadoop-3.3.4/bin" >> $GITHUB_PATH
      - name: Install parquet-cli
        id: parquet_cli
        working-directory: ./.ci_bin
        run: |
          git clone https://github.com/apache/parquet-mr.git
          cd parquet-mr/parquet-cli
          mvn clean install -DskipTests
          runtime_jar="$(pwd)"/target/parquet-cli-1.13.0-SNAPSHOT-runtime.jar
          echo "::set-output name=runtime_jar::$runtime_jar"
      - name: Check expect
        run: expect -v
      - name: Test all Unix
        env:
          DOLT_FMT: ${{ matrix.dolt_fmt }}
          PARQUET_RUNTIME_JAR: ${{ steps.parquet_cli.outputs.runtime_jar }}
          BATS_TEST_RETRIES: "3"
        run: |
          if [ -n "$DOLT_FMT" ]; then export DOLT_DEFAULT_BIN_FORMAT="$DOLT_FMT"; fi
          bats --tap .
        working-directory: ./integration-tests/bats
