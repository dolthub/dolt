// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dolt/services/eventsapi/v1alpha1/client_event.proto

package eventsapi

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Platform int32

const (
	Platform_PLATFORM_UNSPECIFIED Platform = 0
	Platform_LINUX                Platform = 1
	Platform_WINDOWS              Platform = 2
	Platform_DARWIN               Platform = 3
)

var Platform_name = map[int32]string{
	0: "PLATFORM_UNSPECIFIED",
	1: "LINUX",
	2: "WINDOWS",
	3: "DARWIN",
}

var Platform_value = map[string]int32{
	"PLATFORM_UNSPECIFIED": 0,
	"LINUX":                1,
	"WINDOWS":              2,
	"DARWIN":               3,
}

func (x Platform) String() string {
	return proto.EnumName(Platform_name, int32(x))
}

func (Platform) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2059ca7f76f8dca6, []int{0}
}

type ClientEventType int32

const (
	ClientEventType_TYPE_UNSPECIFIED                 ClientEventType = 0
	ClientEventType_INIT                             ClientEventType = 1
	ClientEventType_STATUS                           ClientEventType = 2
	ClientEventType_ADD                              ClientEventType = 3
	ClientEventType_RESET                            ClientEventType = 4
	ClientEventType_COMMIT                           ClientEventType = 5
	ClientEventType_SQL                              ClientEventType = 6
	ClientEventType_SQL_SERVER                       ClientEventType = 7
	ClientEventType_LOG                              ClientEventType = 8
	ClientEventType_DIFF                             ClientEventType = 9
	ClientEventType_MERGE                            ClientEventType = 10
	ClientEventType_BRANCH                           ClientEventType = 11
	ClientEventType_CHECKOUT                         ClientEventType = 12
	ClientEventType_REMOTE                           ClientEventType = 13
	ClientEventType_PUSH                             ClientEventType = 14
	ClientEventType_PULL                             ClientEventType = 15
	ClientEventType_FETCH                            ClientEventType = 16
	ClientEventType_CLONE                            ClientEventType = 17
	ClientEventType_LOGIN                            ClientEventType = 18
	ClientEventType_VERSION                          ClientEventType = 19
	ClientEventType_CONFIG                           ClientEventType = 20
	ClientEventType_LS                               ClientEventType = 21
	ClientEventType_SCHEMA                           ClientEventType = 22
	ClientEventType_TABLE_IMPORT                     ClientEventType = 23
	ClientEventType_TABLE_EXPORT                     ClientEventType = 24
	ClientEventType_TABLE_CREATE                     ClientEventType = 25
	ClientEventType_TABLE_RM                         ClientEventType = 26
	ClientEventType_TABLE_MV                         ClientEventType = 27
	ClientEventType_TABLE_CP                         ClientEventType = 28
	ClientEventType_TABLE_SELECT                     ClientEventType = 29
	ClientEventType_TABLE_PUT_ROW                    ClientEventType = 30
	ClientEventType_TABLE_RM_ROW                     ClientEventType = 31
	ClientEventType_CREDS_NEW                        ClientEventType = 32
	ClientEventType_CREDS_RM                         ClientEventType = 33
	ClientEventType_CREDS_LS                         ClientEventType = 34
	ClientEventType_CONF_CAT                         ClientEventType = 35
	ClientEventType_CONF_RESOLVE                     ClientEventType = 36
	ClientEventType_REMOTEAPI_GET_REPO_METADATA      ClientEventType = 37
	ClientEventType_REMOTEAPI_HAS_CHUNKS             ClientEventType = 38
	ClientEventType_REMOTEAPI_GET_DOWNLOAD_LOCATIONS ClientEventType = 39
	ClientEventType_REMOTEAPI_GET_UPLOAD_LOCATIONS   ClientEventType = 40
	ClientEventType_REMOTEAPI_REBASE                 ClientEventType = 41
	ClientEventType_REMOTEAPI_ROOT                   ClientEventType = 42
	ClientEventType_REMOTEAPI_COMMIT                 ClientEventType = 43
	ClientEventType_REMOTEAPI_LIST_TABLE_FILES       ClientEventType = 44
)

var ClientEventType_name = map[int32]string{
	0:  "TYPE_UNSPECIFIED",
	1:  "INIT",
	2:  "STATUS",
	3:  "ADD",
	4:  "RESET",
	5:  "COMMIT",
	6:  "SQL",
	7:  "SQL_SERVER",
	8:  "LOG",
	9:  "DIFF",
	10: "MERGE",
	11: "BRANCH",
	12: "CHECKOUT",
	13: "REMOTE",
	14: "PUSH",
	15: "PULL",
	16: "FETCH",
	17: "CLONE",
	18: "LOGIN",
	19: "VERSION",
	20: "CONFIG",
	21: "LS",
	22: "SCHEMA",
	23: "TABLE_IMPORT",
	24: "TABLE_EXPORT",
	25: "TABLE_CREATE",
	26: "TABLE_RM",
	27: "TABLE_MV",
	28: "TABLE_CP",
	29: "TABLE_SELECT",
	30: "TABLE_PUT_ROW",
	31: "TABLE_RM_ROW",
	32: "CREDS_NEW",
	33: "CREDS_RM",
	34: "CREDS_LS",
	35: "CONF_CAT",
	36: "CONF_RESOLVE",
	37: "REMOTEAPI_GET_REPO_METADATA",
	38: "REMOTEAPI_HAS_CHUNKS",
	39: "REMOTEAPI_GET_DOWNLOAD_LOCATIONS",
	40: "REMOTEAPI_GET_UPLOAD_LOCATIONS",
	41: "REMOTEAPI_REBASE",
	42: "REMOTEAPI_ROOT",
	43: "REMOTEAPI_COMMIT",
	44: "REMOTEAPI_LIST_TABLE_FILES",
}

var ClientEventType_value = map[string]int32{
	"TYPE_UNSPECIFIED":                 0,
	"INIT":                             1,
	"STATUS":                           2,
	"ADD":                              3,
	"RESET":                            4,
	"COMMIT":                           5,
	"SQL":                              6,
	"SQL_SERVER":                       7,
	"LOG":                              8,
	"DIFF":                             9,
	"MERGE":                            10,
	"BRANCH":                           11,
	"CHECKOUT":                         12,
	"REMOTE":                           13,
	"PUSH":                             14,
	"PULL":                             15,
	"FETCH":                            16,
	"CLONE":                            17,
	"LOGIN":                            18,
	"VERSION":                          19,
	"CONFIG":                           20,
	"LS":                               21,
	"SCHEMA":                           22,
	"TABLE_IMPORT":                     23,
	"TABLE_EXPORT":                     24,
	"TABLE_CREATE":                     25,
	"TABLE_RM":                         26,
	"TABLE_MV":                         27,
	"TABLE_CP":                         28,
	"TABLE_SELECT":                     29,
	"TABLE_PUT_ROW":                    30,
	"TABLE_RM_ROW":                     31,
	"CREDS_NEW":                        32,
	"CREDS_RM":                         33,
	"CREDS_LS":                         34,
	"CONF_CAT":                         35,
	"CONF_RESOLVE":                     36,
	"REMOTEAPI_GET_REPO_METADATA":      37,
	"REMOTEAPI_HAS_CHUNKS":             38,
	"REMOTEAPI_GET_DOWNLOAD_LOCATIONS": 39,
	"REMOTEAPI_GET_UPLOAD_LOCATIONS":   40,
	"REMOTEAPI_REBASE":                 41,
	"REMOTEAPI_ROOT":                   42,
	"REMOTEAPI_COMMIT":                 43,
	"REMOTEAPI_LIST_TABLE_FILES":       44,
}

func (x ClientEventType) String() string {
	return proto.EnumName(ClientEventType_name, int32(x))
}

func (ClientEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2059ca7f76f8dca6, []int{1}
}

type MetricID int32

const (
	MetricID_METRIC_UNSPECIFIED  MetricID = 0
	MetricID_BYTES_DOWNLOADED    MetricID = 1
	MetricID_DOWNLOAD_MS_ELAPSED MetricID = 2
	MetricID_REMOTEAPI_RPC_ERROR MetricID = 3
)

var MetricID_name = map[int32]string{
	0: "METRIC_UNSPECIFIED",
	1: "BYTES_DOWNLOADED",
	2: "DOWNLOAD_MS_ELAPSED",
	3: "REMOTEAPI_RPC_ERROR",
}

var MetricID_value = map[string]int32{
	"METRIC_UNSPECIFIED":  0,
	"BYTES_DOWNLOADED":    1,
	"DOWNLOAD_MS_ELAPSED": 2,
	"REMOTEAPI_RPC_ERROR": 3,
}

func (x MetricID) String() string {
	return proto.EnumName(MetricID_name, int32(x))
}

func (MetricID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2059ca7f76f8dca6, []int{2}
}

type AttributeID int32

const (
	AttributeID_ATTRIBUTE_UNSPECIFIED AttributeID = 0
	AttributeID_REMOTE_URL_SCHEME     AttributeID = 2
)

var AttributeID_name = map[int32]string{
	0: "ATTRIBUTE_UNSPECIFIED",
	2: "REMOTE_URL_SCHEME",
}

var AttributeID_value = map[string]int32{
	"ATTRIBUTE_UNSPECIFIED": 0,
	"REMOTE_URL_SCHEME":     2,
}

func (x AttributeID) String() string {
	return proto.EnumName(AttributeID_name, int32(x))
}

func (AttributeID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2059ca7f76f8dca6, []int{3}
}

type ClientEventAttribute struct {
	Id                   AttributeID `protobuf:"varint,1,opt,name=id,proto3,enum=dolt.services.eventsapi.v1alpha1.AttributeID" json:"id,omitempty"`
	Value                string      `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ClientEventAttribute) Reset()         { *m = ClientEventAttribute{} }
func (m *ClientEventAttribute) String() string { return proto.CompactTextString(m) }
func (*ClientEventAttribute) ProtoMessage()    {}
func (*ClientEventAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_2059ca7f76f8dca6, []int{0}
}

func (m *ClientEventAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientEventAttribute.Unmarshal(m, b)
}
func (m *ClientEventAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientEventAttribute.Marshal(b, m, deterministic)
}
func (m *ClientEventAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientEventAttribute.Merge(m, src)
}
func (m *ClientEventAttribute) XXX_Size() int {
	return xxx_messageInfo_ClientEventAttribute.Size(m)
}
func (m *ClientEventAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientEventAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_ClientEventAttribute proto.InternalMessageInfo

func (m *ClientEventAttribute) GetId() AttributeID {
	if m != nil {
		return m.Id
	}
	return AttributeID_ATTRIBUTE_UNSPECIFIED
}

func (m *ClientEventAttribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ClientEventMetric struct {
	// Types that are valid to be assigned to MetricOneof:
	//	*ClientEventMetric_Duration
	//	*ClientEventMetric_Count
	MetricOneof          isClientEventMetric_MetricOneof `protobuf_oneof:"metric_oneof"`
	MetricId             MetricID                        `protobuf:"varint,100,opt,name=metric_id,json=metricId,proto3,enum=dolt.services.eventsapi.v1alpha1.MetricID" json:"metric_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ClientEventMetric) Reset()         { *m = ClientEventMetric{} }
func (m *ClientEventMetric) String() string { return proto.CompactTextString(m) }
func (*ClientEventMetric) ProtoMessage()    {}
func (*ClientEventMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_2059ca7f76f8dca6, []int{1}
}

func (m *ClientEventMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientEventMetric.Unmarshal(m, b)
}
func (m *ClientEventMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientEventMetric.Marshal(b, m, deterministic)
}
func (m *ClientEventMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientEventMetric.Merge(m, src)
}
func (m *ClientEventMetric) XXX_Size() int {
	return xxx_messageInfo_ClientEventMetric.Size(m)
}
func (m *ClientEventMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientEventMetric.DiscardUnknown(m)
}

var xxx_messageInfo_ClientEventMetric proto.InternalMessageInfo

type isClientEventMetric_MetricOneof interface {
	isClientEventMetric_MetricOneof()
}

type ClientEventMetric_Duration struct {
	Duration *duration.Duration `protobuf:"bytes,1,opt,name=duration,proto3,oneof"`
}

type ClientEventMetric_Count struct {
	Count int32 `protobuf:"varint,2,opt,name=count,proto3,oneof"`
}

func (*ClientEventMetric_Duration) isClientEventMetric_MetricOneof() {}

func (*ClientEventMetric_Count) isClientEventMetric_MetricOneof() {}

func (m *ClientEventMetric) GetMetricOneof() isClientEventMetric_MetricOneof {
	if m != nil {
		return m.MetricOneof
	}
	return nil
}

func (m *ClientEventMetric) GetDuration() *duration.Duration {
	if x, ok := m.GetMetricOneof().(*ClientEventMetric_Duration); ok {
		return x.Duration
	}
	return nil
}

func (m *ClientEventMetric) GetCount() int32 {
	if x, ok := m.GetMetricOneof().(*ClientEventMetric_Count); ok {
		return x.Count
	}
	return 0
}

func (m *ClientEventMetric) GetMetricId() MetricID {
	if m != nil {
		return m.MetricId
	}
	return MetricID_METRIC_UNSPECIFIED
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ClientEventMetric) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ClientEventMetric_Duration)(nil),
		(*ClientEventMetric_Count)(nil),
	}
}

type ClientEvent struct {
	Id                   string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime            *timestamp.Timestamp    `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp    `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Type                 ClientEventType         `protobuf:"varint,4,opt,name=type,proto3,enum=dolt.services.eventsapi.v1alpha1.ClientEventType" json:"type,omitempty"`
	Attributes           []*ClientEventAttribute `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Metrics              []*ClientEventMetric    `protobuf:"bytes,6,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ClientEvent) Reset()         { *m = ClientEvent{} }
func (m *ClientEvent) String() string { return proto.CompactTextString(m) }
func (*ClientEvent) ProtoMessage()    {}
func (*ClientEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_2059ca7f76f8dca6, []int{2}
}

func (m *ClientEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientEvent.Unmarshal(m, b)
}
func (m *ClientEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientEvent.Marshal(b, m, deterministic)
}
func (m *ClientEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientEvent.Merge(m, src)
}
func (m *ClientEvent) XXX_Size() int {
	return xxx_messageInfo_ClientEvent.Size(m)
}
func (m *ClientEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ClientEvent proto.InternalMessageInfo

func (m *ClientEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ClientEvent) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *ClientEvent) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *ClientEvent) GetType() ClientEventType {
	if m != nil {
		return m.Type
	}
	return ClientEventType_TYPE_UNSPECIFIED
}

func (m *ClientEvent) GetAttributes() []*ClientEventAttribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *ClientEvent) GetMetrics() []*ClientEventMetric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type LogEventsRequest struct {
	MachineId            string         `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	Extra                string         `protobuf:"bytes,2,opt,name=extra,proto3" json:"extra,omitempty"`
	Version              string         `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Platform             Platform       `protobuf:"varint,4,opt,name=platform,proto3,enum=dolt.services.eventsapi.v1alpha1.Platform" json:"platform,omitempty"`
	Events               []*ClientEvent `protobuf:"bytes,5,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LogEventsRequest) Reset()         { *m = LogEventsRequest{} }
func (m *LogEventsRequest) String() string { return proto.CompactTextString(m) }
func (*LogEventsRequest) ProtoMessage()    {}
func (*LogEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2059ca7f76f8dca6, []int{3}
}

func (m *LogEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEventsRequest.Unmarshal(m, b)
}
func (m *LogEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEventsRequest.Marshal(b, m, deterministic)
}
func (m *LogEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEventsRequest.Merge(m, src)
}
func (m *LogEventsRequest) XXX_Size() int {
	return xxx_messageInfo_LogEventsRequest.Size(m)
}
func (m *LogEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogEventsRequest proto.InternalMessageInfo

func (m *LogEventsRequest) GetMachineId() string {
	if m != nil {
		return m.MachineId
	}
	return ""
}

func (m *LogEventsRequest) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *LogEventsRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *LogEventsRequest) GetPlatform() Platform {
	if m != nil {
		return m.Platform
	}
	return Platform_PLATFORM_UNSPECIFIED
}

func (m *LogEventsRequest) GetEvents() []*ClientEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type LogEventsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogEventsResponse) Reset()         { *m = LogEventsResponse{} }
func (m *LogEventsResponse) String() string { return proto.CompactTextString(m) }
func (*LogEventsResponse) ProtoMessage()    {}
func (*LogEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2059ca7f76f8dca6, []int{4}
}

func (m *LogEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEventsResponse.Unmarshal(m, b)
}
func (m *LogEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEventsResponse.Marshal(b, m, deterministic)
}
func (m *LogEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEventsResponse.Merge(m, src)
}
func (m *LogEventsResponse) XXX_Size() int {
	return xxx_messageInfo_LogEventsResponse.Size(m)
}
func (m *LogEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogEventsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("dolt.services.eventsapi.v1alpha1.Platform", Platform_name, Platform_value)
	proto.RegisterEnum("dolt.services.eventsapi.v1alpha1.ClientEventType", ClientEventType_name, ClientEventType_value)
	proto.RegisterEnum("dolt.services.eventsapi.v1alpha1.MetricID", MetricID_name, MetricID_value)
	proto.RegisterEnum("dolt.services.eventsapi.v1alpha1.AttributeID", AttributeID_name, AttributeID_value)
	proto.RegisterType((*ClientEventAttribute)(nil), "dolt.services.eventsapi.v1alpha1.ClientEventAttribute")
	proto.RegisterType((*ClientEventMetric)(nil), "dolt.services.eventsapi.v1alpha1.ClientEventMetric")
	proto.RegisterType((*ClientEvent)(nil), "dolt.services.eventsapi.v1alpha1.ClientEvent")
	proto.RegisterType((*LogEventsRequest)(nil), "dolt.services.eventsapi.v1alpha1.LogEventsRequest")
	proto.RegisterType((*LogEventsResponse)(nil), "dolt.services.eventsapi.v1alpha1.LogEventsResponse")
}

func init() {
	proto.RegisterFile("dolt/services/eventsapi/v1alpha1/client_event.proto", fileDescriptor_2059ca7f76f8dca6)
}

var fileDescriptor_2059ca7f76f8dca6 = []byte{
	// 1125 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xef, 0x72, 0xdb, 0x44,
	0x10, 0xaf, 0xed, 0x38, 0xb1, 0xd7, 0x69, 0xba, 0xb9, 0xa4, 0xad, 0x9b, 0xd2, 0x34, 0x98, 0x02,
	0x21, 0x50, 0x7b, 0x9a, 0x0c, 0x30, 0x0c, 0xc3, 0x30, 0xb2, 0x74, 0x8e, 0x35, 0xd5, 0xbf, 0xde,
	0x9d, 0xe3, 0x96, 0x2f, 0x1a, 0xc5, 0x56, 0x53, 0x81, 0x63, 0xb9, 0x96, 0x9c, 0xa1, 0xcf, 0xc0,
	0x33, 0xf1, 0x34, 0xbc, 0x00, 0x2f, 0xc0, 0x0c, 0x73, 0x27, 0xff, 0xab, 0xf9, 0x60, 0xf2, 0xcd,
	0xbb, 0xfb, 0xfb, 0xfd, 0x6e, 0x77, 0x6f, 0xb5, 0x3e, 0x38, 0xeb, 0xc7, 0x83, 0xb4, 0x91, 0x84,
	0xe3, 0x9b, 0xa8, 0x17, 0x26, 0x8d, 0xf0, 0x26, 0x1c, 0xa6, 0x49, 0x30, 0x8a, 0x1a, 0x37, 0x2f,
	0x82, 0xc1, 0xe8, 0x5d, 0xf0, 0xa2, 0xd1, 0x1b, 0x44, 0xe1, 0x30, 0xf5, 0x55, 0xa4, 0x3e, 0x1a,
	0xc7, 0x69, 0x4c, 0x8e, 0x24, 0xa9, 0x3e, 0x23, 0xd5, 0xe7, 0xa4, 0xfa, 0x8c, 0x74, 0x70, 0x78,
	0x15, 0xc7, 0x57, 0x83, 0xb0, 0xa1, 0xf0, 0x97, 0x93, 0xb7, 0x8d, 0xfe, 0x64, 0x1c, 0xa4, 0x51,
	0x3c, 0xcc, 0x14, 0x0e, 0x9e, 0xae, 0xc6, 0xd3, 0xe8, 0x3a, 0x4c, 0xd2, 0xe0, 0x7a, 0x94, 0x01,
	0x6a, 0xbf, 0xc1, 0xbe, 0xae, 0x0e, 0xa6, 0x52, 0x5c, 0x4b, 0xd3, 0x71, 0x74, 0x39, 0x49, 0x43,
	0xf2, 0x13, 0xe4, 0xa3, 0x7e, 0x35, 0x77, 0x94, 0x3b, 0xde, 0x39, 0x7d, 0x5e, 0x5f, 0x97, 0x47,
	0x7d, 0x4e, 0x34, 0x0d, 0x96, 0x8f, 0xfa, 0x64, 0x1f, 0x8a, 0x37, 0xc1, 0x60, 0x12, 0x56, 0xf3,
	0x47, 0xb9, 0xe3, 0x32, 0xcb, 0x8c, 0xda, 0x9f, 0x39, 0xd8, 0x5d, 0x3a, 0xcd, 0x0e, 0xd3, 0x71,
	0xd4, 0x23, 0xdf, 0x43, 0x69, 0x96, 0xb5, 0x3a, 0xb0, 0x72, 0xfa, 0xa8, 0x9e, 0xa5, 0x5d, 0x9f,
	0xa5, 0x5d, 0x37, 0xa6, 0x80, 0xf6, 0x1d, 0x36, 0x07, 0x93, 0x07, 0x50, 0xec, 0xc5, 0x93, 0x61,
	0xaa, 0x0e, 0x29, 0xb6, 0xef, 0xb0, 0xcc, 0x24, 0xe7, 0x50, 0xbe, 0x56, 0xd2, 0x7e, 0xd4, 0xaf,
	0xf6, 0x55, 0x09, 0x27, 0xeb, 0x4b, 0xc8, 0xb2, 0x31, 0x0d, 0x56, 0xca, 0xc8, 0x66, 0xbf, 0xb9,
	0x03, 0xdb, 0x53, 0xa1, 0x78, 0x18, 0xc6, 0x6f, 0x6b, 0xff, 0xe4, 0xa1, 0xb2, 0x94, 0x3f, 0xd9,
	0x99, 0x37, 0xa9, 0xac, 0xaa, 0xfe, 0x01, 0x20, 0x49, 0x83, 0x71, 0xea, 0xcb, 0x2e, 0xab, 0xac,
	0x2a, 0xa7, 0x07, 0xff, 0xa9, 0x45, 0xcc, 0xae, 0x80, 0x95, 0x15, 0x5a, 0xda, 0xe4, 0x5b, 0x28,
	0x85, 0xc3, 0x7e, 0x46, 0x2c, 0xac, 0x25, 0x6e, 0x85, 0xc3, 0xbe, 0xa2, 0x51, 0xd8, 0x48, 0x3f,
	0x8c, 0xc2, 0xea, 0x86, 0xaa, 0xf2, 0xc5, 0xfa, 0x2a, 0x97, 0xd2, 0x17, 0x1f, 0x46, 0x21, 0x53,
	0x74, 0x72, 0x01, 0x10, 0xcc, 0x6e, 0x30, 0xa9, 0x16, 0x8f, 0x0a, 0xc7, 0x95, 0xd3, 0xef, 0x6e,
	0x25, 0x36, 0x1f, 0x00, 0xb6, 0xa4, 0x44, 0x6c, 0xd8, 0xca, 0x1a, 0x98, 0x54, 0x37, 0x95, 0xe8,
	0xd9, 0xad, 0x44, 0xb3, 0x2b, 0x61, 0x33, 0x8d, 0xda, 0xdf, 0x39, 0x40, 0x2b, 0xbe, 0x52, 0xb1,
	0x84, 0x85, 0xef, 0x27, 0x61, 0x92, 0x92, 0x27, 0x00, 0xd7, 0x41, 0xef, 0x5d, 0x34, 0x0c, 0xfd,
	0xf9, 0x65, 0x94, 0xa7, 0x1e, 0x53, 0x4d, 0x62, 0xf8, 0x7b, 0x3a, 0x0e, 0x66, 0x93, 0xa8, 0x0c,
	0x52, 0x85, 0xad, 0x9b, 0x70, 0x9c, 0xc8, 0x91, 0x2b, 0x28, 0xff, 0xcc, 0x24, 0x2d, 0x28, 0x8d,
	0x06, 0x41, 0xfa, 0x36, 0x1e, 0x5f, 0x4f, 0xbb, 0xfa, 0x3f, 0x66, 0xc7, 0x9b, 0x32, 0xd8, 0x9c,
	0x4b, 0x28, 0x6c, 0x66, 0xc0, 0x69, 0x3b, 0x9f, 0xdf, 0xaa, 0x72, 0x36, 0x25, 0xd7, 0xf6, 0x60,
	0x77, 0xa9, 0xe2, 0x64, 0x14, 0x0f, 0x93, 0xf0, 0xa4, 0x0d, 0xa5, 0xd9, 0x89, 0xa4, 0x0a, 0xfb,
	0x9e, 0xa5, 0x89, 0x96, 0xcb, 0x6c, 0xbf, 0xe3, 0x70, 0x8f, 0xea, 0x66, 0xcb, 0xa4, 0x06, 0xde,
	0x21, 0x65, 0x28, 0x5a, 0xa6, 0xd3, 0x79, 0x8d, 0x39, 0x52, 0x81, 0xad, 0xae, 0xe9, 0x18, 0x6e,
	0x97, 0x63, 0x9e, 0x00, 0x6c, 0x1a, 0x1a, 0xeb, 0x9a, 0x0e, 0x16, 0x4e, 0xfe, 0x2a, 0xc2, 0xbd,
	0x95, 0x91, 0x20, 0xfb, 0x80, 0xe2, 0x8d, 0x47, 0x57, 0xd4, 0x4a, 0xb0, 0x61, 0x3a, 0xa6, 0xc0,
	0x9c, 0xe4, 0x73, 0xa1, 0x89, 0x8e, 0xd4, 0xda, 0x82, 0x82, 0x66, 0x18, 0x58, 0x90, 0x87, 0x31,
	0xca, 0xa9, 0xc0, 0x0d, 0x19, 0xd7, 0x5d, 0xdb, 0x36, 0x05, 0x16, 0x65, 0x9c, 0xbf, 0xb2, 0x70,
	0x93, 0xec, 0x00, 0xf0, 0x57, 0x96, 0xcf, 0x29, 0xbb, 0xa0, 0x0c, 0xb7, 0x64, 0xc0, 0x72, 0xcf,
	0xb1, 0x24, 0x75, 0x0d, 0xb3, 0xd5, 0xc2, 0xb2, 0x94, 0xb0, 0x29, 0x3b, 0xa7, 0x08, 0x52, 0xa2,
	0xc9, 0x34, 0x47, 0x6f, 0x63, 0x85, 0x6c, 0x43, 0x49, 0x6f, 0x53, 0xfd, 0xa5, 0xdb, 0x11, 0xb8,
	0x2d, 0x23, 0x8c, 0xda, 0xae, 0xa0, 0x78, 0x57, 0x52, 0xbd, 0x0e, 0x6f, 0xe3, 0x4e, 0xf6, 0xcb,
	0xb2, 0xf0, 0x9e, 0x14, 0x69, 0x51, 0xa1, 0xb7, 0x11, 0xe5, 0x4f, 0xdd, 0x72, 0x1d, 0x8a, 0xbb,
	0xaa, 0x15, 0xee, 0xb9, 0xe9, 0x20, 0x91, 0xad, 0xb8, 0xa0, 0x8c, 0x9b, 0xae, 0x83, 0x7b, 0x59,
	0xaa, 0x4e, 0xcb, 0x3c, 0xc7, 0x7d, 0xb2, 0x09, 0x79, 0x8b, 0xe3, 0x7d, 0x55, 0x9e, 0xde, 0xa6,
	0xb6, 0x86, 0x0f, 0x08, 0xc2, 0xb6, 0xd0, 0x9a, 0x16, 0xf5, 0x4d, 0xdb, 0x73, 0x99, 0xc0, 0x87,
	0x0b, 0x0f, 0x7d, 0xad, 0x3c, 0xd5, 0x85, 0x47, 0x67, 0x54, 0x13, 0x14, 0x1f, 0xc9, 0x8c, 0x33,
	0x0f, 0xb3, 0xf1, 0x60, 0x61, 0xd9, 0x17, 0xf8, 0x78, 0x61, 0xe9, 0x1e, 0x7e, 0xb2, 0xe0, 0x72,
	0x6a, 0x51, 0x5d, 0xe0, 0x13, 0xb2, 0x0b, 0x77, 0x33, 0x8f, 0xd7, 0x11, 0x3e, 0x73, 0xbb, 0x78,
	0xb8, 0x00, 0x31, 0x5b, 0x79, 0x9e, 0x92, 0xbb, 0x50, 0xd6, 0x19, 0x35, 0xb8, 0xef, 0xd0, 0x2e,
	0x1e, 0xa9, 0x0e, 0x29, 0x93, 0xd9, 0xf8, 0xe9, 0xc2, 0xb2, 0x38, 0xd6, 0x94, 0xe5, 0x3a, 0x2d,
	0x5f, 0xd7, 0x04, 0x7e, 0x26, 0xa5, 0x94, 0xc5, 0x28, 0x77, 0xad, 0x0b, 0x8a, 0xcf, 0xc8, 0x53,
	0x78, 0x9c, 0xf5, 0x53, 0xf3, 0x4c, 0xff, 0x9c, 0x0a, 0x9f, 0x51, 0xcf, 0xf5, 0x6d, 0x2a, 0x34,
	0x43, 0x13, 0x1a, 0x7e, 0x2e, 0xe7, 0x6b, 0x01, 0x68, 0x6b, 0xdc, 0xd7, 0xdb, 0x1d, 0xe7, 0x25,
	0xc7, 0x2f, 0xc8, 0x33, 0x38, 0xfa, 0x98, 0x6a, 0xb8, 0x5d, 0xc7, 0x72, 0x35, 0xc3, 0xb7, 0x5c,
	0x5d, 0x13, 0xa6, 0xeb, 0x70, 0xfc, 0x92, 0xd4, 0xe0, 0xf0, 0x63, 0x54, 0xc7, 0x5b, 0xc1, 0x1c,
	0xcb, 0x89, 0x5b, 0x60, 0x18, 0x6d, 0x6a, 0x9c, 0xe2, 0x57, 0x84, 0xc0, 0xce, 0x92, 0xd7, 0x75,
	0x05, 0x9e, 0x7c, 0x8c, 0x9c, 0x4e, 0xd9, 0xd7, 0xe4, 0x10, 0x0e, 0x16, 0x5e, 0xcb, 0xe4, 0xc2,
	0xcf, 0x1a, 0xd6, 0x32, 0x2d, 0xca, 0xf1, 0x9b, 0x93, 0x5f, 0xa1, 0x34, 0xdb, 0xee, 0xe4, 0x01,
	0x10, 0x9b, 0x0a, 0x66, 0xea, 0x2b, 0xf3, 0xbd, 0x0f, 0xd8, 0x7c, 0x23, 0x28, 0x9f, 0x57, 0x41,
	0x0d, 0xcc, 0x91, 0x87, 0xb0, 0x37, 0xaf, 0xca, 0xe6, 0x3e, 0xb5, 0x34, 0x8f, 0x53, 0x03, 0xf3,
	0x32, 0xb0, 0x94, 0x9c, 0xa7, 0xfb, 0x94, 0x31, 0x97, 0x61, 0xe1, 0xe4, 0x67, 0xa8, 0x2c, 0xfd,
	0x19, 0x92, 0x47, 0x70, 0x5f, 0x13, 0x82, 0x99, 0xcd, 0x8e, 0x58, 0xfd, 0xa2, 0xee, 0xc3, 0x6e,
	0x26, 0xe1, 0x77, 0x98, 0xe5, 0xab, 0x99, 0xa3, 0x98, 0x3f, 0xfd, 0x23, 0x07, 0x7b, 0x4b, 0x9f,
	0x64, 0xc2, 0xb3, 0x8d, 0x41, 0x52, 0x28, 0xcf, 0x37, 0x01, 0x39, 0x5d, 0xbf, 0x4d, 0x56, 0x17,
	0xe5, 0xc1, 0xd9, 0xad, 0x38, 0xd9, 0xaa, 0x69, 0x76, 0x7f, 0xe9, 0x5c, 0x45, 0xe9, 0xbb, 0xc9,
	0x65, 0xbd, 0x17, 0x5f, 0x37, 0x06, 0xd1, 0xfb, 0x49, 0xd4, 0x0f, 0xd2, 0xe0, 0x79, 0x34, 0xec,
	0x35, 0xd4, 0x93, 0xe6, 0x2a, 0x6e, 0x5c, 0x85, 0xc3, 0xec, 0x81, 0xd1, 0x58, 0xf7, 0xc8, 0xf9,
	0x71, 0xee, 0xba, 0xdc, 0x54, 0x8c, 0xb3, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xce, 0x5d, 0x91,
	0xf8, 0x19, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClientEventsServiceClient is the client API for ClientEventsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClientEventsServiceClient interface {
	LogEvents(ctx context.Context, in *LogEventsRequest, opts ...grpc.CallOption) (*LogEventsResponse, error)
}

type clientEventsServiceClient struct {
	cc *grpc.ClientConn
}

func NewClientEventsServiceClient(cc *grpc.ClientConn) ClientEventsServiceClient {
	return &clientEventsServiceClient{cc}
}

func (c *clientEventsServiceClient) LogEvents(ctx context.Context, in *LogEventsRequest, opts ...grpc.CallOption) (*LogEventsResponse, error) {
	out := new(LogEventsResponse)
	err := c.cc.Invoke(ctx, "/dolt.services.eventsapi.v1alpha1.ClientEventsService/LogEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClientEventsServiceServer is the server API for ClientEventsService service.
type ClientEventsServiceServer interface {
	LogEvents(context.Context, *LogEventsRequest) (*LogEventsResponse, error)
}

// UnimplementedClientEventsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClientEventsServiceServer struct {
}

func (*UnimplementedClientEventsServiceServer) LogEvents(ctx context.Context, req *LogEventsRequest) (*LogEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogEvents not implemented")
}

func RegisterClientEventsServiceServer(s *grpc.Server, srv ClientEventsServiceServer) {
	s.RegisterService(&_ClientEventsService_serviceDesc, srv)
}

func _ClientEventsService_LogEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClientEventsServiceServer).LogEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolt.services.eventsapi.v1alpha1.ClientEventsService/LogEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClientEventsServiceServer).LogEvents(ctx, req.(*LogEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClientEventsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dolt.services.eventsapi.v1alpha1.ClientEventsService",
	HandlerType: (*ClientEventsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LogEvents",
			Handler:    _ClientEventsService_LogEvents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dolt/services/eventsapi/v1alpha1/client_event.proto",
}
