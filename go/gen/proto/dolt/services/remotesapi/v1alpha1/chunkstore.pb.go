// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dolt/services/remotesapi/v1alpha1/chunkstore.proto

package remotesapi

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RepoId struct {
	Org                  string   `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
	RepoName             string   `protobuf:"bytes,2,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepoId) Reset()         { *m = RepoId{} }
func (m *RepoId) String() string { return proto.CompactTextString(m) }
func (*RepoId) ProtoMessage()    {}
func (*RepoId) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{0}
}

func (m *RepoId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepoId.Unmarshal(m, b)
}
func (m *RepoId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepoId.Marshal(b, m, deterministic)
}
func (m *RepoId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepoId.Merge(m, src)
}
func (m *RepoId) XXX_Size() int {
	return xxx_messageInfo_RepoId.Size(m)
}
func (m *RepoId) XXX_DiscardUnknown() {
	xxx_messageInfo_RepoId.DiscardUnknown(m)
}

var xxx_messageInfo_RepoId proto.InternalMessageInfo

func (m *RepoId) GetOrg() string {
	if m != nil {
		return m.Org
	}
	return ""
}

func (m *RepoId) GetRepoName() string {
	if m != nil {
		return m.RepoName
	}
	return ""
}

type HasChunksRequest struct {
	RepoId               *RepoId  `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	Hashes               [][]byte `protobuf:"bytes,2,rep,name=hashes,proto3" json:"hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasChunksRequest) Reset()         { *m = HasChunksRequest{} }
func (m *HasChunksRequest) String() string { return proto.CompactTextString(m) }
func (*HasChunksRequest) ProtoMessage()    {}
func (*HasChunksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{1}
}

func (m *HasChunksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasChunksRequest.Unmarshal(m, b)
}
func (m *HasChunksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasChunksRequest.Marshal(b, m, deterministic)
}
func (m *HasChunksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasChunksRequest.Merge(m, src)
}
func (m *HasChunksRequest) XXX_Size() int {
	return xxx_messageInfo_HasChunksRequest.Size(m)
}
func (m *HasChunksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HasChunksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HasChunksRequest proto.InternalMessageInfo

func (m *HasChunksRequest) GetRepoId() *RepoId {
	if m != nil {
		return m.RepoId
	}
	return nil
}

func (m *HasChunksRequest) GetHashes() [][]byte {
	if m != nil {
		return m.Hashes
	}
	return nil
}

type HasChunksResponse struct {
	Absent               []int32  `protobuf:"varint,1,rep,packed,name=absent,proto3" json:"absent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasChunksResponse) Reset()         { *m = HasChunksResponse{} }
func (m *HasChunksResponse) String() string { return proto.CompactTextString(m) }
func (*HasChunksResponse) ProtoMessage()    {}
func (*HasChunksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{2}
}

func (m *HasChunksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasChunksResponse.Unmarshal(m, b)
}
func (m *HasChunksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasChunksResponse.Marshal(b, m, deterministic)
}
func (m *HasChunksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasChunksResponse.Merge(m, src)
}
func (m *HasChunksResponse) XXX_Size() int {
	return xxx_messageInfo_HasChunksResponse.Size(m)
}
func (m *HasChunksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HasChunksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HasChunksResponse proto.InternalMessageInfo

func (m *HasChunksResponse) GetAbsent() []int32 {
	if m != nil {
		return m.Absent
	}
	return nil
}

type HttpGetChunk struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Hashes               [][]byte `protobuf:"bytes,2,rep,name=hashes,proto3" json:"hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpGetChunk) Reset()         { *m = HttpGetChunk{} }
func (m *HttpGetChunk) String() string { return proto.CompactTextString(m) }
func (*HttpGetChunk) ProtoMessage()    {}
func (*HttpGetChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{3}
}

func (m *HttpGetChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpGetChunk.Unmarshal(m, b)
}
func (m *HttpGetChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpGetChunk.Marshal(b, m, deterministic)
}
func (m *HttpGetChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpGetChunk.Merge(m, src)
}
func (m *HttpGetChunk) XXX_Size() int {
	return xxx_messageInfo_HttpGetChunk.Size(m)
}
func (m *HttpGetChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpGetChunk.DiscardUnknown(m)
}

var xxx_messageInfo_HttpGetChunk proto.InternalMessageInfo

func (m *HttpGetChunk) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HttpGetChunk) GetHashes() [][]byte {
	if m != nil {
		return m.Hashes
	}
	return nil
}

type RangeChunk struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Offset               uint64   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Length               uint32   `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RangeChunk) Reset()         { *m = RangeChunk{} }
func (m *RangeChunk) String() string { return proto.CompactTextString(m) }
func (*RangeChunk) ProtoMessage()    {}
func (*RangeChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{4}
}

func (m *RangeChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeChunk.Unmarshal(m, b)
}
func (m *RangeChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeChunk.Marshal(b, m, deterministic)
}
func (m *RangeChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeChunk.Merge(m, src)
}
func (m *RangeChunk) XXX_Size() int {
	return xxx_messageInfo_RangeChunk.Size(m)
}
func (m *RangeChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeChunk.DiscardUnknown(m)
}

var xxx_messageInfo_RangeChunk proto.InternalMessageInfo

func (m *RangeChunk) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *RangeChunk) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *RangeChunk) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

type HttpGetRange struct {
	Url                  string        `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Ranges               []*RangeChunk `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *HttpGetRange) Reset()         { *m = HttpGetRange{} }
func (m *HttpGetRange) String() string { return proto.CompactTextString(m) }
func (*HttpGetRange) ProtoMessage()    {}
func (*HttpGetRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{5}
}

func (m *HttpGetRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpGetRange.Unmarshal(m, b)
}
func (m *HttpGetRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpGetRange.Marshal(b, m, deterministic)
}
func (m *HttpGetRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpGetRange.Merge(m, src)
}
func (m *HttpGetRange) XXX_Size() int {
	return xxx_messageInfo_HttpGetRange.Size(m)
}
func (m *HttpGetRange) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpGetRange.DiscardUnknown(m)
}

var xxx_messageInfo_HttpGetRange proto.InternalMessageInfo

func (m *HttpGetRange) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HttpGetRange) GetRanges() []*RangeChunk {
	if m != nil {
		return m.Ranges
	}
	return nil
}

type DownloadLoc struct {
	// Types that are valid to be assigned to Location:
	//	*DownloadLoc_HttpGet
	//	*DownloadLoc_HttpGetRange
	Location             isDownloadLoc_Location `protobuf_oneof:"location"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DownloadLoc) Reset()         { *m = DownloadLoc{} }
func (m *DownloadLoc) String() string { return proto.CompactTextString(m) }
func (*DownloadLoc) ProtoMessage()    {}
func (*DownloadLoc) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{6}
}

func (m *DownloadLoc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadLoc.Unmarshal(m, b)
}
func (m *DownloadLoc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadLoc.Marshal(b, m, deterministic)
}
func (m *DownloadLoc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadLoc.Merge(m, src)
}
func (m *DownloadLoc) XXX_Size() int {
	return xxx_messageInfo_DownloadLoc.Size(m)
}
func (m *DownloadLoc) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadLoc.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadLoc proto.InternalMessageInfo

type isDownloadLoc_Location interface {
	isDownloadLoc_Location()
}

type DownloadLoc_HttpGet struct {
	HttpGet *HttpGetChunk `protobuf:"bytes,1,opt,name=http_get,json=httpGet,proto3,oneof"`
}

type DownloadLoc_HttpGetRange struct {
	HttpGetRange *HttpGetRange `protobuf:"bytes,2,opt,name=http_get_range,json=httpGetRange,proto3,oneof"`
}

func (*DownloadLoc_HttpGet) isDownloadLoc_Location() {}

func (*DownloadLoc_HttpGetRange) isDownloadLoc_Location() {}

func (m *DownloadLoc) GetLocation() isDownloadLoc_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *DownloadLoc) GetHttpGet() *HttpGetChunk {
	if x, ok := m.GetLocation().(*DownloadLoc_HttpGet); ok {
		return x.HttpGet
	}
	return nil
}

func (m *DownloadLoc) GetHttpGetRange() *HttpGetRange {
	if x, ok := m.GetLocation().(*DownloadLoc_HttpGetRange); ok {
		return x.HttpGetRange
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DownloadLoc) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DownloadLoc_HttpGet)(nil),
		(*DownloadLoc_HttpGetRange)(nil),
	}
}

type HttpPostTableFile struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpPostTableFile) Reset()         { *m = HttpPostTableFile{} }
func (m *HttpPostTableFile) String() string { return proto.CompactTextString(m) }
func (*HttpPostTableFile) ProtoMessage()    {}
func (*HttpPostTableFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{7}
}

func (m *HttpPostTableFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpPostTableFile.Unmarshal(m, b)
}
func (m *HttpPostTableFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpPostTableFile.Marshal(b, m, deterministic)
}
func (m *HttpPostTableFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpPostTableFile.Merge(m, src)
}
func (m *HttpPostTableFile) XXX_Size() int {
	return xxx_messageInfo_HttpPostTableFile.Size(m)
}
func (m *HttpPostTableFile) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpPostTableFile.DiscardUnknown(m)
}

var xxx_messageInfo_HttpPostTableFile proto.InternalMessageInfo

func (m *HttpPostTableFile) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type UploadLoc struct {
	TableFileHash []byte `protobuf:"bytes,1,opt,name=table_file_hash,json=tableFileHash,proto3" json:"table_file_hash,omitempty"`
	// Types that are valid to be assigned to Location:
	//	*UploadLoc_HttpPost
	Location             isUploadLoc_Location `protobuf_oneof:"location"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UploadLoc) Reset()         { *m = UploadLoc{} }
func (m *UploadLoc) String() string { return proto.CompactTextString(m) }
func (*UploadLoc) ProtoMessage()    {}
func (*UploadLoc) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{8}
}

func (m *UploadLoc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadLoc.Unmarshal(m, b)
}
func (m *UploadLoc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadLoc.Marshal(b, m, deterministic)
}
func (m *UploadLoc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadLoc.Merge(m, src)
}
func (m *UploadLoc) XXX_Size() int {
	return xxx_messageInfo_UploadLoc.Size(m)
}
func (m *UploadLoc) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadLoc.DiscardUnknown(m)
}

var xxx_messageInfo_UploadLoc proto.InternalMessageInfo

func (m *UploadLoc) GetTableFileHash() []byte {
	if m != nil {
		return m.TableFileHash
	}
	return nil
}

type isUploadLoc_Location interface {
	isUploadLoc_Location()
}

type UploadLoc_HttpPost struct {
	HttpPost *HttpPostTableFile `protobuf:"bytes,2,opt,name=http_post,json=httpPost,proto3,oneof"`
}

func (*UploadLoc_HttpPost) isUploadLoc_Location() {}

func (m *UploadLoc) GetLocation() isUploadLoc_Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *UploadLoc) GetHttpPost() *HttpPostTableFile {
	if x, ok := m.GetLocation().(*UploadLoc_HttpPost); ok {
		return x.HttpPost
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UploadLoc) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UploadLoc_HttpPost)(nil),
	}
}

type GetDownloadLocsRequest struct {
	RepoId               *RepoId  `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	ChunkHashes          [][]byte `protobuf:"bytes,2,rep,name=chunk_hashes,json=chunkHashes,proto3" json:"chunk_hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDownloadLocsRequest) Reset()         { *m = GetDownloadLocsRequest{} }
func (m *GetDownloadLocsRequest) String() string { return proto.CompactTextString(m) }
func (*GetDownloadLocsRequest) ProtoMessage()    {}
func (*GetDownloadLocsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{9}
}

func (m *GetDownloadLocsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDownloadLocsRequest.Unmarshal(m, b)
}
func (m *GetDownloadLocsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDownloadLocsRequest.Marshal(b, m, deterministic)
}
func (m *GetDownloadLocsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDownloadLocsRequest.Merge(m, src)
}
func (m *GetDownloadLocsRequest) XXX_Size() int {
	return xxx_messageInfo_GetDownloadLocsRequest.Size(m)
}
func (m *GetDownloadLocsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDownloadLocsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDownloadLocsRequest proto.InternalMessageInfo

func (m *GetDownloadLocsRequest) GetRepoId() *RepoId {
	if m != nil {
		return m.RepoId
	}
	return nil
}

func (m *GetDownloadLocsRequest) GetChunkHashes() [][]byte {
	if m != nil {
		return m.ChunkHashes
	}
	return nil
}

type GetDownloadLocsResponse struct {
	Locs                 []*DownloadLoc `protobuf:"bytes,1,rep,name=locs,proto3" json:"locs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetDownloadLocsResponse) Reset()         { *m = GetDownloadLocsResponse{} }
func (m *GetDownloadLocsResponse) String() string { return proto.CompactTextString(m) }
func (*GetDownloadLocsResponse) ProtoMessage()    {}
func (*GetDownloadLocsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{10}
}

func (m *GetDownloadLocsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDownloadLocsResponse.Unmarshal(m, b)
}
func (m *GetDownloadLocsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDownloadLocsResponse.Marshal(b, m, deterministic)
}
func (m *GetDownloadLocsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDownloadLocsResponse.Merge(m, src)
}
func (m *GetDownloadLocsResponse) XXX_Size() int {
	return xxx_messageInfo_GetDownloadLocsResponse.Size(m)
}
func (m *GetDownloadLocsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDownloadLocsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDownloadLocsResponse proto.InternalMessageInfo

func (m *GetDownloadLocsResponse) GetLocs() []*DownloadLoc {
	if m != nil {
		return m.Locs
	}
	return nil
}

type GetUploadLocsRequest struct {
	RepoId               *RepoId  `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	TableFileHashes      [][]byte `protobuf:"bytes,2,rep,name=table_file_hashes,json=tableFileHashes,proto3" json:"table_file_hashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUploadLocsRequest) Reset()         { *m = GetUploadLocsRequest{} }
func (m *GetUploadLocsRequest) String() string { return proto.CompactTextString(m) }
func (*GetUploadLocsRequest) ProtoMessage()    {}
func (*GetUploadLocsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{11}
}

func (m *GetUploadLocsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUploadLocsRequest.Unmarshal(m, b)
}
func (m *GetUploadLocsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUploadLocsRequest.Marshal(b, m, deterministic)
}
func (m *GetUploadLocsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUploadLocsRequest.Merge(m, src)
}
func (m *GetUploadLocsRequest) XXX_Size() int {
	return xxx_messageInfo_GetUploadLocsRequest.Size(m)
}
func (m *GetUploadLocsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUploadLocsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUploadLocsRequest proto.InternalMessageInfo

func (m *GetUploadLocsRequest) GetRepoId() *RepoId {
	if m != nil {
		return m.RepoId
	}
	return nil
}

func (m *GetUploadLocsRequest) GetTableFileHashes() [][]byte {
	if m != nil {
		return m.TableFileHashes
	}
	return nil
}

type GetUploadLocsResponse struct {
	Locs                 []*UploadLoc `protobuf:"bytes,1,rep,name=locs,proto3" json:"locs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetUploadLocsResponse) Reset()         { *m = GetUploadLocsResponse{} }
func (m *GetUploadLocsResponse) String() string { return proto.CompactTextString(m) }
func (*GetUploadLocsResponse) ProtoMessage()    {}
func (*GetUploadLocsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{12}
}

func (m *GetUploadLocsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUploadLocsResponse.Unmarshal(m, b)
}
func (m *GetUploadLocsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUploadLocsResponse.Marshal(b, m, deterministic)
}
func (m *GetUploadLocsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUploadLocsResponse.Merge(m, src)
}
func (m *GetUploadLocsResponse) XXX_Size() int {
	return xxx_messageInfo_GetUploadLocsResponse.Size(m)
}
func (m *GetUploadLocsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUploadLocsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUploadLocsResponse proto.InternalMessageInfo

func (m *GetUploadLocsResponse) GetLocs() []*UploadLoc {
	if m != nil {
		return m.Locs
	}
	return nil
}

type RebaseRequest struct {
	RepoId               *RepoId  `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebaseRequest) Reset()         { *m = RebaseRequest{} }
func (m *RebaseRequest) String() string { return proto.CompactTextString(m) }
func (*RebaseRequest) ProtoMessage()    {}
func (*RebaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{13}
}

func (m *RebaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebaseRequest.Unmarshal(m, b)
}
func (m *RebaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebaseRequest.Marshal(b, m, deterministic)
}
func (m *RebaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebaseRequest.Merge(m, src)
}
func (m *RebaseRequest) XXX_Size() int {
	return xxx_messageInfo_RebaseRequest.Size(m)
}
func (m *RebaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RebaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RebaseRequest proto.InternalMessageInfo

func (m *RebaseRequest) GetRepoId() *RepoId {
	if m != nil {
		return m.RepoId
	}
	return nil
}

type RebaseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebaseResponse) Reset()         { *m = RebaseResponse{} }
func (m *RebaseResponse) String() string { return proto.CompactTextString(m) }
func (*RebaseResponse) ProtoMessage()    {}
func (*RebaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{14}
}

func (m *RebaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebaseResponse.Unmarshal(m, b)
}
func (m *RebaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebaseResponse.Marshal(b, m, deterministic)
}
func (m *RebaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebaseResponse.Merge(m, src)
}
func (m *RebaseResponse) XXX_Size() int {
	return xxx_messageInfo_RebaseResponse.Size(m)
}
func (m *RebaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RebaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RebaseResponse proto.InternalMessageInfo

type RootRequest struct {
	RepoId               *RepoId  `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RootRequest) Reset()         { *m = RootRequest{} }
func (m *RootRequest) String() string { return proto.CompactTextString(m) }
func (*RootRequest) ProtoMessage()    {}
func (*RootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{15}
}

func (m *RootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootRequest.Unmarshal(m, b)
}
func (m *RootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootRequest.Marshal(b, m, deterministic)
}
func (m *RootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootRequest.Merge(m, src)
}
func (m *RootRequest) XXX_Size() int {
	return xxx_messageInfo_RootRequest.Size(m)
}
func (m *RootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RootRequest proto.InternalMessageInfo

func (m *RootRequest) GetRepoId() *RepoId {
	if m != nil {
		return m.RepoId
	}
	return nil
}

type RootResponse struct {
	RootHash             []byte   `protobuf:"bytes,1,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RootResponse) Reset()         { *m = RootResponse{} }
func (m *RootResponse) String() string { return proto.CompactTextString(m) }
func (*RootResponse) ProtoMessage()    {}
func (*RootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{16}
}

func (m *RootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootResponse.Unmarshal(m, b)
}
func (m *RootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootResponse.Marshal(b, m, deterministic)
}
func (m *RootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootResponse.Merge(m, src)
}
func (m *RootResponse) XXX_Size() int {
	return xxx_messageInfo_RootResponse.Size(m)
}
func (m *RootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RootResponse proto.InternalMessageInfo

func (m *RootResponse) GetRootHash() []byte {
	if m != nil {
		return m.RootHash
	}
	return nil
}

type ChunkTableInfo struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	ChunkCount           uint32   `protobuf:"varint,2,opt,name=chunk_count,json=chunkCount,proto3" json:"chunk_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkTableInfo) Reset()         { *m = ChunkTableInfo{} }
func (m *ChunkTableInfo) String() string { return proto.CompactTextString(m) }
func (*ChunkTableInfo) ProtoMessage()    {}
func (*ChunkTableInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{17}
}

func (m *ChunkTableInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkTableInfo.Unmarshal(m, b)
}
func (m *ChunkTableInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkTableInfo.Marshal(b, m, deterministic)
}
func (m *ChunkTableInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkTableInfo.Merge(m, src)
}
func (m *ChunkTableInfo) XXX_Size() int {
	return xxx_messageInfo_ChunkTableInfo.Size(m)
}
func (m *ChunkTableInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkTableInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkTableInfo proto.InternalMessageInfo

func (m *ChunkTableInfo) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *ChunkTableInfo) GetChunkCount() uint32 {
	if m != nil {
		return m.ChunkCount
	}
	return 0
}

type CommitRequest struct {
	RepoId               *RepoId           `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	Current              []byte            `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
	Last                 []byte            `protobuf:"bytes,3,opt,name=last,proto3" json:"last,omitempty"`
	ChunkTableInfo       []*ChunkTableInfo `protobuf:"bytes,4,rep,name=chunk_table_info,json=chunkTableInfo,proto3" json:"chunk_table_info,omitempty"`
	ClientRepoFormat     *ClientRepoFormat `protobuf:"bytes,14,opt,name=client_repo_format,json=clientRepoFormat,proto3" json:"client_repo_format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CommitRequest) Reset()         { *m = CommitRequest{} }
func (m *CommitRequest) String() string { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()    {}
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{18}
}

func (m *CommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRequest.Unmarshal(m, b)
}
func (m *CommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRequest.Marshal(b, m, deterministic)
}
func (m *CommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRequest.Merge(m, src)
}
func (m *CommitRequest) XXX_Size() int {
	return xxx_messageInfo_CommitRequest.Size(m)
}
func (m *CommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRequest proto.InternalMessageInfo

func (m *CommitRequest) GetRepoId() *RepoId {
	if m != nil {
		return m.RepoId
	}
	return nil
}

func (m *CommitRequest) GetCurrent() []byte {
	if m != nil {
		return m.Current
	}
	return nil
}

func (m *CommitRequest) GetLast() []byte {
	if m != nil {
		return m.Last
	}
	return nil
}

func (m *CommitRequest) GetChunkTableInfo() []*ChunkTableInfo {
	if m != nil {
		return m.ChunkTableInfo
	}
	return nil
}

func (m *CommitRequest) GetClientRepoFormat() *ClientRepoFormat {
	if m != nil {
		return m.ClientRepoFormat
	}
	return nil
}

type CommitResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitResponse) Reset()         { *m = CommitResponse{} }
func (m *CommitResponse) String() string { return proto.CompactTextString(m) }
func (*CommitResponse) ProtoMessage()    {}
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{19}
}

func (m *CommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitResponse.Unmarshal(m, b)
}
func (m *CommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitResponse.Marshal(b, m, deterministic)
}
func (m *CommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitResponse.Merge(m, src)
}
func (m *CommitResponse) XXX_Size() int {
	return xxx_messageInfo_CommitResponse.Size(m)
}
func (m *CommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitResponse proto.InternalMessageInfo

func (m *CommitResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type GetRepoMetadataRequest struct {
	RepoId               *RepoId           `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	ClientRepoFormat     *ClientRepoFormat `protobuf:"bytes,14,opt,name=client_repo_format,json=clientRepoFormat,proto3" json:"client_repo_format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetRepoMetadataRequest) Reset()         { *m = GetRepoMetadataRequest{} }
func (m *GetRepoMetadataRequest) String() string { return proto.CompactTextString(m) }
func (*GetRepoMetadataRequest) ProtoMessage()    {}
func (*GetRepoMetadataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{20}
}

func (m *GetRepoMetadataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoMetadataRequest.Unmarshal(m, b)
}
func (m *GetRepoMetadataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoMetadataRequest.Marshal(b, m, deterministic)
}
func (m *GetRepoMetadataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoMetadataRequest.Merge(m, src)
}
func (m *GetRepoMetadataRequest) XXX_Size() int {
	return xxx_messageInfo_GetRepoMetadataRequest.Size(m)
}
func (m *GetRepoMetadataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoMetadataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoMetadataRequest proto.InternalMessageInfo

func (m *GetRepoMetadataRequest) GetRepoId() *RepoId {
	if m != nil {
		return m.RepoId
	}
	return nil
}

func (m *GetRepoMetadataRequest) GetClientRepoFormat() *ClientRepoFormat {
	if m != nil {
		return m.ClientRepoFormat
	}
	return nil
}

type GetRepoMetadataResponse struct {
	// Version string of the noms binary format for this repository.
	// See types.NomsBinFormat.
	NbfVersion string `protobuf:"bytes,1,opt,name=nbf_version,json=nbfVersion,proto3" json:"nbf_version,omitempty"`
	// Version string of the nbs format of this repository.
	// See nbs.StorageVersion.
	NbsVersion           string   `protobuf:"bytes,2,opt,name=nbs_version,json=nbsVersion,proto3" json:"nbs_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepoMetadataResponse) Reset()         { *m = GetRepoMetadataResponse{} }
func (m *GetRepoMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*GetRepoMetadataResponse) ProtoMessage()    {}
func (*GetRepoMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{21}
}

func (m *GetRepoMetadataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepoMetadataResponse.Unmarshal(m, b)
}
func (m *GetRepoMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepoMetadataResponse.Marshal(b, m, deterministic)
}
func (m *GetRepoMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepoMetadataResponse.Merge(m, src)
}
func (m *GetRepoMetadataResponse) XXX_Size() int {
	return xxx_messageInfo_GetRepoMetadataResponse.Size(m)
}
func (m *GetRepoMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepoMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepoMetadataResponse proto.InternalMessageInfo

func (m *GetRepoMetadataResponse) GetNbfVersion() string {
	if m != nil {
		return m.NbfVersion
	}
	return ""
}

func (m *GetRepoMetadataResponse) GetNbsVersion() string {
	if m != nil {
		return m.NbsVersion
	}
	return ""
}

type ClientRepoFormat struct {
	NbfVersion           string   `protobuf:"bytes,1,opt,name=nbf_version,json=nbfVersion,proto3" json:"nbf_version,omitempty"`
	NbsVersion           string   `protobuf:"bytes,2,opt,name=nbs_version,json=nbsVersion,proto3" json:"nbs_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientRepoFormat) Reset()         { *m = ClientRepoFormat{} }
func (m *ClientRepoFormat) String() string { return proto.CompactTextString(m) }
func (*ClientRepoFormat) ProtoMessage()    {}
func (*ClientRepoFormat) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{22}
}

func (m *ClientRepoFormat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientRepoFormat.Unmarshal(m, b)
}
func (m *ClientRepoFormat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientRepoFormat.Marshal(b, m, deterministic)
}
func (m *ClientRepoFormat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientRepoFormat.Merge(m, src)
}
func (m *ClientRepoFormat) XXX_Size() int {
	return xxx_messageInfo_ClientRepoFormat.Size(m)
}
func (m *ClientRepoFormat) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientRepoFormat.DiscardUnknown(m)
}

var xxx_messageInfo_ClientRepoFormat proto.InternalMessageInfo

func (m *ClientRepoFormat) GetNbfVersion() string {
	if m != nil {
		return m.NbfVersion
	}
	return ""
}

func (m *ClientRepoFormat) GetNbsVersion() string {
	if m != nil {
		return m.NbsVersion
	}
	return ""
}

type ListTableFilesRequest struct {
	RepoId               *RepoId  `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTableFilesRequest) Reset()         { *m = ListTableFilesRequest{} }
func (m *ListTableFilesRequest) String() string { return proto.CompactTextString(m) }
func (*ListTableFilesRequest) ProtoMessage()    {}
func (*ListTableFilesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{23}
}

func (m *ListTableFilesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTableFilesRequest.Unmarshal(m, b)
}
func (m *ListTableFilesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTableFilesRequest.Marshal(b, m, deterministic)
}
func (m *ListTableFilesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTableFilesRequest.Merge(m, src)
}
func (m *ListTableFilesRequest) XXX_Size() int {
	return xxx_messageInfo_ListTableFilesRequest.Size(m)
}
func (m *ListTableFilesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTableFilesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTableFilesRequest proto.InternalMessageInfo

func (m *ListTableFilesRequest) GetRepoId() *RepoId {
	if m != nil {
		return m.RepoId
	}
	return nil
}

type TableFileInfo struct {
	FileId               string   `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	NumChunks            uint32   `protobuf:"varint,2,opt,name=num_chunks,json=numChunks,proto3" json:"num_chunks,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableFileInfo) Reset()         { *m = TableFileInfo{} }
func (m *TableFileInfo) String() string { return proto.CompactTextString(m) }
func (*TableFileInfo) ProtoMessage()    {}
func (*TableFileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{24}
}

func (m *TableFileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableFileInfo.Unmarshal(m, b)
}
func (m *TableFileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableFileInfo.Marshal(b, m, deterministic)
}
func (m *TableFileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableFileInfo.Merge(m, src)
}
func (m *TableFileInfo) XXX_Size() int {
	return xxx_messageInfo_TableFileInfo.Size(m)
}
func (m *TableFileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TableFileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TableFileInfo proto.InternalMessageInfo

func (m *TableFileInfo) GetFileId() string {
	if m != nil {
		return m.FileId
	}
	return ""
}

func (m *TableFileInfo) GetNumChunks() uint32 {
	if m != nil {
		return m.NumChunks
	}
	return 0
}

func (m *TableFileInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ListTableFilesResponse struct {
	RootHash             []byte           `protobuf:"bytes,1,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	TableFileInfo        []*TableFileInfo `protobuf:"bytes,2,rep,name=table_file_info,json=tableFileInfo,proto3" json:"table_file_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListTableFilesResponse) Reset()         { *m = ListTableFilesResponse{} }
func (m *ListTableFilesResponse) String() string { return proto.CompactTextString(m) }
func (*ListTableFilesResponse) ProtoMessage()    {}
func (*ListTableFilesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_702c187af9ca94ec, []int{25}
}

func (m *ListTableFilesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTableFilesResponse.Unmarshal(m, b)
}
func (m *ListTableFilesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTableFilesResponse.Marshal(b, m, deterministic)
}
func (m *ListTableFilesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTableFilesResponse.Merge(m, src)
}
func (m *ListTableFilesResponse) XXX_Size() int {
	return xxx_messageInfo_ListTableFilesResponse.Size(m)
}
func (m *ListTableFilesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTableFilesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTableFilesResponse proto.InternalMessageInfo

func (m *ListTableFilesResponse) GetRootHash() []byte {
	if m != nil {
		return m.RootHash
	}
	return nil
}

func (m *ListTableFilesResponse) GetTableFileInfo() []*TableFileInfo {
	if m != nil {
		return m.TableFileInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*RepoId)(nil), "dolt.services.remotesapi.v1alpha1.RepoId")
	proto.RegisterType((*HasChunksRequest)(nil), "dolt.services.remotesapi.v1alpha1.HasChunksRequest")
	proto.RegisterType((*HasChunksResponse)(nil), "dolt.services.remotesapi.v1alpha1.HasChunksResponse")
	proto.RegisterType((*HttpGetChunk)(nil), "dolt.services.remotesapi.v1alpha1.HttpGetChunk")
	proto.RegisterType((*RangeChunk)(nil), "dolt.services.remotesapi.v1alpha1.RangeChunk")
	proto.RegisterType((*HttpGetRange)(nil), "dolt.services.remotesapi.v1alpha1.HttpGetRange")
	proto.RegisterType((*DownloadLoc)(nil), "dolt.services.remotesapi.v1alpha1.DownloadLoc")
	proto.RegisterType((*HttpPostTableFile)(nil), "dolt.services.remotesapi.v1alpha1.HttpPostTableFile")
	proto.RegisterType((*UploadLoc)(nil), "dolt.services.remotesapi.v1alpha1.UploadLoc")
	proto.RegisterType((*GetDownloadLocsRequest)(nil), "dolt.services.remotesapi.v1alpha1.GetDownloadLocsRequest")
	proto.RegisterType((*GetDownloadLocsResponse)(nil), "dolt.services.remotesapi.v1alpha1.GetDownloadLocsResponse")
	proto.RegisterType((*GetUploadLocsRequest)(nil), "dolt.services.remotesapi.v1alpha1.GetUploadLocsRequest")
	proto.RegisterType((*GetUploadLocsResponse)(nil), "dolt.services.remotesapi.v1alpha1.GetUploadLocsResponse")
	proto.RegisterType((*RebaseRequest)(nil), "dolt.services.remotesapi.v1alpha1.RebaseRequest")
	proto.RegisterType((*RebaseResponse)(nil), "dolt.services.remotesapi.v1alpha1.RebaseResponse")
	proto.RegisterType((*RootRequest)(nil), "dolt.services.remotesapi.v1alpha1.RootRequest")
	proto.RegisterType((*RootResponse)(nil), "dolt.services.remotesapi.v1alpha1.RootResponse")
	proto.RegisterType((*ChunkTableInfo)(nil), "dolt.services.remotesapi.v1alpha1.ChunkTableInfo")
	proto.RegisterType((*CommitRequest)(nil), "dolt.services.remotesapi.v1alpha1.CommitRequest")
	proto.RegisterType((*CommitResponse)(nil), "dolt.services.remotesapi.v1alpha1.CommitResponse")
	proto.RegisterType((*GetRepoMetadataRequest)(nil), "dolt.services.remotesapi.v1alpha1.GetRepoMetadataRequest")
	proto.RegisterType((*GetRepoMetadataResponse)(nil), "dolt.services.remotesapi.v1alpha1.GetRepoMetadataResponse")
	proto.RegisterType((*ClientRepoFormat)(nil), "dolt.services.remotesapi.v1alpha1.ClientRepoFormat")
	proto.RegisterType((*ListTableFilesRequest)(nil), "dolt.services.remotesapi.v1alpha1.ListTableFilesRequest")
	proto.RegisterType((*TableFileInfo)(nil), "dolt.services.remotesapi.v1alpha1.TableFileInfo")
	proto.RegisterType((*ListTableFilesResponse)(nil), "dolt.services.remotesapi.v1alpha1.ListTableFilesResponse")
}

func init() {
	proto.RegisterFile("dolt/services/remotesapi/v1alpha1/chunkstore.proto", fileDescriptor_702c187af9ca94ec)
}

var fileDescriptor_702c187af9ca94ec = []byte{
	// 1083 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x5b, 0x6f, 0x1b, 0xc5,
	0x17, 0xcf, 0x26, 0xfe, 0xfb, 0x72, 0x7c, 0x89, 0xb3, 0xfa, 0x37, 0xb5, 0x8c, 0x50, 0xd3, 0x95,
	0x40, 0xa1, 0xa5, 0xde, 0xc6, 0xad, 0xd4, 0x16, 0x5e, 0x50, 0x42, 0x1b, 0x47, 0x0a, 0xa8, 0x4c,
	0x0a, 0x25, 0x44, 0x68, 0xb5, 0x5e, 0x8f, 0xed, 0x15, 0xbb, 0x33, 0xdb, 0x9d, 0xd9, 0xf0, 0xc8,
	0x13, 0x97, 0x17, 0xc4, 0x0b, 0xdf, 0x07, 0xf8, 0x64, 0xa0, 0xb9, 0xac, 0xb3, 0xeb, 0x1a, 0x75,
	0x52, 0x59, 0xbc, 0xf9, 0x1c, 0xcf, 0x39, 0xe7, 0xf7, 0x3b, 0x33, 0xe7, 0xb2, 0x30, 0x9c, 0xd0,
	0x88, 0xbb, 0x0c, 0xa7, 0x97, 0x61, 0x80, 0x99, 0x9b, 0xe2, 0x98, 0x72, 0xcc, 0xfc, 0x24, 0x74,
	0x2f, 0x0f, 0xfc, 0x28, 0x99, 0xfb, 0x07, 0x6e, 0x30, 0xcf, 0xc8, 0x77, 0x8c, 0xd3, 0x14, 0x0f,
	0x92, 0x94, 0x72, 0x6a, 0xdf, 0x16, 0x36, 0x83, 0xdc, 0x66, 0x70, 0x65, 0x33, 0xc8, 0x6d, 0x9c,
	0x47, 0x50, 0x45, 0x38, 0xa1, 0x27, 0x13, 0xbb, 0x0b, 0x5b, 0x34, 0x9d, 0xf5, 0xac, 0x3d, 0x6b,
	0xbf, 0x81, 0xc4, 0x4f, 0xfb, 0x1d, 0x68, 0xa4, 0x38, 0xa1, 0x1e, 0xf1, 0x63, 0xdc, 0xdb, 0x94,
	0xfa, 0xba, 0x50, 0x7c, 0xee, 0xc7, 0xd8, 0x21, 0xd0, 0x1d, 0xf9, 0xec, 0x48, 0x86, 0x44, 0xf8,
	0x55, 0x86, 0x19, 0xb7, 0x0f, 0xa1, 0x26, 0x0d, 0xc2, 0x89, 0x74, 0xd3, 0x1c, 0x7e, 0x30, 0x78,
	0x23, 0x82, 0x81, 0x0a, 0x8f, 0xaa, 0xa9, 0x82, 0xb1, 0x0b, 0xd5, 0xb9, 0xcf, 0xe6, 0x98, 0xf5,
	0x36, 0xf7, 0xb6, 0xf6, 0x5b, 0x48, 0x4b, 0xce, 0x5d, 0xd8, 0x29, 0xc4, 0x63, 0x09, 0x25, 0x0c,
	0x8b, 0xc3, 0xfe, 0x98, 0x61, 0xc2, 0x7b, 0xd6, 0xde, 0xd6, 0xfe, 0xff, 0x90, 0x96, 0x9c, 0xc7,
	0xd0, 0x1a, 0x71, 0x9e, 0x1c, 0x63, 0x2e, 0x0d, 0x04, 0xb7, 0x2c, 0x8d, 0x72, 0x6e, 0x59, 0x1a,
	0xfd, 0x6b, 0x98, 0xe7, 0x00, 0xc8, 0x27, 0x33, 0xac, 0xec, 0x6c, 0xa8, 0x08, 0xbd, 0x34, 0x6c,
	0x21, 0xf9, 0x5b, 0x58, 0xd2, 0xe9, 0x94, 0x61, 0x2e, 0x53, 0x52, 0x41, 0x5a, 0x12, 0xfa, 0x08,
	0x93, 0x19, 0x9f, 0xf7, 0xb6, 0xf6, 0xac, 0xfd, 0x36, 0xd2, 0x92, 0x33, 0x5b, 0x60, 0x91, 0x8e,
	0x57, 0x60, 0x79, 0x0a, 0xd5, 0x54, 0xfc, 0xa5, 0xb0, 0x34, 0x87, 0xf7, 0x4c, 0xb2, 0xb6, 0x00,
	0x89, 0xb4, 0xb1, 0xf3, 0xa7, 0x05, 0xcd, 0x4f, 0xe9, 0xf7, 0x24, 0xa2, 0xfe, 0xe4, 0x94, 0x06,
	0xf6, 0x29, 0xd4, 0xe7, 0x9c, 0x27, 0xde, 0x0c, 0x73, 0x7d, 0x1d, 0xae, 0x81, 0xe3, 0x62, 0xde,
	0x46, 0x1b, 0xa8, 0x36, 0x57, 0xb2, 0xfd, 0x12, 0x3a, 0xb9, 0x37, 0x4f, 0x06, 0x94, 0xf4, 0xaf,
	0xe5, 0x53, 0x62, 0x1e, 0x6d, 0xa0, 0xd6, 0xbc, 0x20, 0x1f, 0x02, 0xd4, 0x23, 0x1a, 0xf8, 0x3c,
	0xa4, 0xc4, 0x79, 0x0f, 0x76, 0xc4, 0xd9, 0xe7, 0x94, 0xf1, 0x17, 0xfe, 0x38, 0xc2, 0xcf, 0xc2,
	0x68, 0x45, 0xc2, 0x9c, 0xdf, 0x2d, 0x68, 0x7c, 0x99, 0xe4, 0x3c, 0xdf, 0x87, 0x6d, 0x2e, 0x0e,
	0x7b, 0xd3, 0x30, 0xc2, 0x5e, 0xe1, 0xbe, 0xda, 0x3c, 0xf7, 0x31, 0x12, 0x17, 0x77, 0x06, 0x0d,
	0xc9, 0x20, 0xa1, 0x8c, 0x6b, 0xf0, 0x0f, 0x0d, 0xc1, 0x97, 0x00, 0x8d, 0x36, 0x90, 0x4c, 0xac,
	0x50, 0x96, 0xd0, 0xff, 0x00, 0xbb, 0xc7, 0x98, 0x17, 0xae, 0x60, 0xad, 0x85, 0x71, 0x1b, 0x5a,
	0xb2, 0xc0, 0xbd, 0xd2, 0xbb, 0x6d, 0x4a, 0xdd, 0x48, 0x3d, 0xde, 0x6f, 0xe1, 0xe6, 0x6b, 0x00,
	0x74, 0xa5, 0x1c, 0x42, 0x25, 0xa2, 0x01, 0x93, 0x75, 0xd2, 0x1c, 0x0e, 0x0c, 0xc2, 0x17, 0xdc,
	0x20, 0x69, 0xeb, 0xfc, 0x64, 0xc1, 0xff, 0x8f, 0x31, 0x5f, 0x64, 0x7e, 0xad, 0xf4, 0xee, 0xc0,
	0xce, 0xd2, 0x2d, 0x2e, 0x38, 0x6e, 0x97, 0xee, 0x11, 0x33, 0xe7, 0x1c, 0x6e, 0x2c, 0xe1, 0xd0,
	0x2c, 0x3f, 0x29, 0xb1, 0xfc, 0xd0, 0x00, 0xc5, 0xc2, 0x89, 0xe6, 0x78, 0x06, 0x6d, 0x84, 0xc7,
	0x3e, 0xc3, 0x6b, 0xe4, 0xe6, 0x74, 0xa1, 0x93, 0x3b, 0x55, 0x40, 0x9d, 0x2f, 0xa0, 0x89, 0x28,
	0xe5, 0xeb, 0x0c, 0x72, 0x17, 0x5a, 0xca, 0xa5, 0xce, 0x85, 0xe8, 0xde, 0x94, 0xf2, 0x62, 0x41,
	0xd4, 0x85, 0x42, 0xe4, 0xd0, 0x79, 0x0a, 0x1d, 0x59, 0xe1, 0xf2, 0x51, 0x9f, 0x90, 0x29, 0x5d,
	0xd9, 0xea, 0x6e, 0x81, 0x7a, 0x5e, 0x5e, 0x40, 0x33, 0xa2, 0x6a, 0xa6, 0x8d, 0x40, 0xaa, 0x8e,
	0x84, 0xc6, 0xf9, 0x6b, 0x13, 0xda, 0x47, 0x34, 0x8e, 0xc3, 0x75, 0x32, 0xb1, 0x7b, 0x50, 0x0b,
	0xb2, 0x34, 0xc5, 0x3a, 0x64, 0x0b, 0xe5, 0xa2, 0x00, 0x19, 0xf9, 0x8c, 0xcb, 0x0e, 0xdb, 0x42,
	0xf2, 0xb7, 0x7d, 0x01, 0x5d, 0x05, 0x52, 0x3d, 0x9f, 0x90, 0x4c, 0x69, 0xaf, 0x22, 0xef, 0xff,
	0xc0, 0x20, 0x74, 0x39, 0x0b, 0xa8, 0x13, 0x94, 0xb3, 0xe2, 0x83, 0x1d, 0x44, 0x21, 0x26, 0xdc,
	0x93, 0xac, 0xa6, 0x34, 0x8d, 0x7d, 0xde, 0xeb, 0x48, 0x66, 0x0f, 0x4c, 0xdc, 0x4b, 0x63, 0xc1,
	0xef, 0x99, 0x34, 0x45, 0xdd, 0x60, 0x49, 0xe3, 0xdc, 0x81, 0x4e, 0x9e, 0x42, 0x7d, 0x73, 0x3d,
	0xa8, 0xb1, 0x2c, 0x08, 0x30, 0x63, 0x32, 0x87, 0x75, 0x94, 0x8b, 0xce, 0x1f, 0x96, 0x6c, 0x31,
	0xc2, 0xfa, 0x33, 0xcc, 0xfd, 0x89, 0xcf, 0xfd, 0x75, 0x26, 0xfe, 0x3f, 0x60, 0x7b, 0x21, 0x5b,
	0x54, 0x99, 0x80, 0xa6, 0x7d, 0x0b, 0x9a, 0x64, 0x3c, 0xf5, 0x2e, 0x71, 0xca, 0x42, 0x4a, 0x74,
	0xbf, 0x07, 0x32, 0x9e, 0x7e, 0xa5, 0x34, 0xea, 0x00, 0x5b, 0x1c, 0xd8, 0xcc, 0x0f, 0x30, 0x7d,
	0xc0, 0x79, 0x01, 0xdd, 0x65, 0x08, 0x6b, 0xf0, 0x7a, 0x01, 0x37, 0x4e, 0xc3, 0x42, 0xff, 0x5f,
	0x67, 0xdb, 0x73, 0xce, 0xa1, 0xbd, 0x70, 0x2c, 0x5f, 0xdc, 0x4d, 0xa8, 0xc9, 0x0e, 0xa8, 0x9d,
	0x36, 0x50, 0x55, 0x88, 0x27, 0x13, 0xfb, 0x5d, 0x00, 0x92, 0xc5, 0x9e, 0x5a, 0xf2, 0x74, 0x2d,
	0x36, 0x48, 0x16, 0xab, 0x95, 0x28, 0x9f, 0x92, 0x5b, 0x57, 0x53, 0xf2, 0x37, 0x0b, 0x76, 0x97,
	0x81, 0x1b, 0xf4, 0x06, 0xfb, 0xeb, 0xd2, 0x3c, 0x95, 0xf5, 0xa4, 0xf6, 0x92, 0xfb, 0x06, 0xf4,
	0x4a, 0x64, 0x0a, 0x13, 0x58, 0x88, 0xc3, 0xbf, 0x6b, 0xb0, 0x23, 0xe1, 0x9e, 0x89, 0x25, 0xf5,
	0x4c, 0xf9, 0xb1, 0x7f, 0xb1, 0x60, 0x7b, 0xe9, 0x4d, 0xd8, 0x4f, 0x0c, 0x42, 0xad, 0x2e, 0x84,
	0xfe, 0x47, 0x6f, 0x63, 0xaa, 0xf3, 0x72, 0x09, 0x8d, 0xc5, 0x92, 0x69, 0x9b, 0xbc, 0xf8, 0xe5,
	0x15, 0xb8, 0xff, 0xf0, 0x7a, 0x46, 0x3a, 0xee, 0xaf, 0x6a, 0xb2, 0x16, 0x46, 0xae, 0xdc, 0x28,
	0x98, 0x69, 0x1e, 0x56, 0xec, 0x1c, 0xa6, 0x79, 0x58, 0xb9, 0x2d, 0xfc, 0x6c, 0x81, 0x5d, 0x9c,
	0xb0, 0x1a, 0xcd, 0x23, 0x33, 0x97, 0xaf, 0x2d, 0x08, 0xfd, 0xc7, 0xd7, 0x37, 0xd4, 0x48, 0x62,
	0xf1, 0x7d, 0x22, 0x46, 0xa7, 0x7d, 0xdf, 0xa8, 0xb8, 0x0a, 0xa3, 0xbb, 0x7f, 0x70, 0x0d, 0x0b,
	0x1d, 0x6e, 0x06, 0x15, 0x31, 0x44, 0x6d, 0x93, 0x05, 0xa9, 0x30, 0xc0, 0xfb, 0xae, 0xf1, 0xf9,
	0x2b, 0x5e, 0xaa, 0xeb, 0x1b, 0xf1, 0x2a, 0xcd, 0x58, 0x23, 0x5e, 0x4b, 0x23, 0xe5, 0x47, 0x0b,
	0x3a, 0xe5, 0x5e, 0x60, 0x9b, 0xdc, 0xc9, 0xca, 0xbe, 0xd7, 0x7f, 0xf2, 0x16, 0x96, 0x0a, 0xc7,
	0xe1, 0xf9, 0x37, 0x2f, 0x67, 0x21, 0x9f, 0x67, 0xe3, 0x41, 0x40, 0x63, 0x37, 0x0a, 0x5f, 0x65,
	0xa1, 0x28, 0xc0, 0x7b, 0x21, 0x09, 0x5c, 0xf9, 0x81, 0x3b, 0xa3, 0xee, 0x0c, 0x13, 0x57, 0x7e,
	0xbf, 0xba, 0x6f, 0xfc, 0xe4, 0xfd, 0xf8, 0x4a, 0x37, 0xae, 0x4a, 0x9b, 0x07, 0xff, 0x04, 0x00,
	0x00, 0xff, 0xff, 0xa2, 0xf7, 0x14, 0x4c, 0x29, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChunkStoreServiceClient is the client API for ChunkStoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChunkStoreServiceClient interface {
	GetRepoMetadata(ctx context.Context, in *GetRepoMetadataRequest, opts ...grpc.CallOption) (*GetRepoMetadataResponse, error)
	HasChunks(ctx context.Context, in *HasChunksRequest, opts ...grpc.CallOption) (*HasChunksResponse, error)
	// Get the download locations for a list of chunk hashes.
	GetDownloadLocations(ctx context.Context, in *GetDownloadLocsRequest, opts ...grpc.CallOption) (*GetDownloadLocsResponse, error)
	// Get upload locations for a list of table file hashes.
	// NOTE: We upload full table files but download individual chunks.
	GetUploadLocations(ctx context.Context, in *GetUploadLocsRequest, opts ...grpc.CallOption) (*GetUploadLocsResponse, error)
	Rebase(ctx context.Context, in *RebaseRequest, opts ...grpc.CallOption) (*RebaseResponse, error)
	Root(ctx context.Context, in *RootRequest, opts ...grpc.CallOption) (*RootResponse, error)
	Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error)
	ListTableFiles(ctx context.Context, in *ListTableFilesRequest, opts ...grpc.CallOption) (*ListTableFilesResponse, error)
}

type chunkStoreServiceClient struct {
	cc *grpc.ClientConn
}

func NewChunkStoreServiceClient(cc *grpc.ClientConn) ChunkStoreServiceClient {
	return &chunkStoreServiceClient{cc}
}

func (c *chunkStoreServiceClient) GetRepoMetadata(ctx context.Context, in *GetRepoMetadataRequest, opts ...grpc.CallOption) (*GetRepoMetadataResponse, error) {
	out := new(GetRepoMetadataResponse)
	err := c.cc.Invoke(ctx, "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/GetRepoMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chunkStoreServiceClient) HasChunks(ctx context.Context, in *HasChunksRequest, opts ...grpc.CallOption) (*HasChunksResponse, error) {
	out := new(HasChunksResponse)
	err := c.cc.Invoke(ctx, "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/HasChunks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chunkStoreServiceClient) GetDownloadLocations(ctx context.Context, in *GetDownloadLocsRequest, opts ...grpc.CallOption) (*GetDownloadLocsResponse, error) {
	out := new(GetDownloadLocsResponse)
	err := c.cc.Invoke(ctx, "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/GetDownloadLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chunkStoreServiceClient) GetUploadLocations(ctx context.Context, in *GetUploadLocsRequest, opts ...grpc.CallOption) (*GetUploadLocsResponse, error) {
	out := new(GetUploadLocsResponse)
	err := c.cc.Invoke(ctx, "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/GetUploadLocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chunkStoreServiceClient) Rebase(ctx context.Context, in *RebaseRequest, opts ...grpc.CallOption) (*RebaseResponse, error) {
	out := new(RebaseResponse)
	err := c.cc.Invoke(ctx, "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/Rebase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chunkStoreServiceClient) Root(ctx context.Context, in *RootRequest, opts ...grpc.CallOption) (*RootResponse, error) {
	out := new(RootResponse)
	err := c.cc.Invoke(ctx, "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/Root", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chunkStoreServiceClient) Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error) {
	out := new(CommitResponse)
	err := c.cc.Invoke(ctx, "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chunkStoreServiceClient) ListTableFiles(ctx context.Context, in *ListTableFilesRequest, opts ...grpc.CallOption) (*ListTableFilesResponse, error) {
	out := new(ListTableFilesResponse)
	err := c.cc.Invoke(ctx, "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/ListTableFiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChunkStoreServiceServer is the server API for ChunkStoreService service.
type ChunkStoreServiceServer interface {
	GetRepoMetadata(context.Context, *GetRepoMetadataRequest) (*GetRepoMetadataResponse, error)
	HasChunks(context.Context, *HasChunksRequest) (*HasChunksResponse, error)
	// Get the download locations for a list of chunk hashes.
	GetDownloadLocations(context.Context, *GetDownloadLocsRequest) (*GetDownloadLocsResponse, error)
	// Get upload locations for a list of table file hashes.
	// NOTE: We upload full table files but download individual chunks.
	GetUploadLocations(context.Context, *GetUploadLocsRequest) (*GetUploadLocsResponse, error)
	Rebase(context.Context, *RebaseRequest) (*RebaseResponse, error)
	Root(context.Context, *RootRequest) (*RootResponse, error)
	Commit(context.Context, *CommitRequest) (*CommitResponse, error)
	ListTableFiles(context.Context, *ListTableFilesRequest) (*ListTableFilesResponse, error)
}

// UnimplementedChunkStoreServiceServer can be embedded to have forward compatible implementations.
type UnimplementedChunkStoreServiceServer struct {
}

func (*UnimplementedChunkStoreServiceServer) GetRepoMetadata(ctx context.Context, req *GetRepoMetadataRequest) (*GetRepoMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepoMetadata not implemented")
}
func (*UnimplementedChunkStoreServiceServer) HasChunks(ctx context.Context, req *HasChunksRequest) (*HasChunksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HasChunks not implemented")
}
func (*UnimplementedChunkStoreServiceServer) GetDownloadLocations(ctx context.Context, req *GetDownloadLocsRequest) (*GetDownloadLocsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDownloadLocations not implemented")
}
func (*UnimplementedChunkStoreServiceServer) GetUploadLocations(ctx context.Context, req *GetUploadLocsRequest) (*GetUploadLocsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUploadLocations not implemented")
}
func (*UnimplementedChunkStoreServiceServer) Rebase(ctx context.Context, req *RebaseRequest) (*RebaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rebase not implemented")
}
func (*UnimplementedChunkStoreServiceServer) Root(ctx context.Context, req *RootRequest) (*RootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Root not implemented")
}
func (*UnimplementedChunkStoreServiceServer) Commit(ctx context.Context, req *CommitRequest) (*CommitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Commit not implemented")
}
func (*UnimplementedChunkStoreServiceServer) ListTableFiles(ctx context.Context, req *ListTableFilesRequest) (*ListTableFilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTableFiles not implemented")
}

func RegisterChunkStoreServiceServer(s *grpc.Server, srv ChunkStoreServiceServer) {
	s.RegisterService(&_ChunkStoreService_serviceDesc, srv)
}

func _ChunkStoreService_GetRepoMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepoMetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChunkStoreServiceServer).GetRepoMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/GetRepoMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChunkStoreServiceServer).GetRepoMetadata(ctx, req.(*GetRepoMetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChunkStoreService_HasChunks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HasChunksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChunkStoreServiceServer).HasChunks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/HasChunks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChunkStoreServiceServer).HasChunks(ctx, req.(*HasChunksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChunkStoreService_GetDownloadLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDownloadLocsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChunkStoreServiceServer).GetDownloadLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/GetDownloadLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChunkStoreServiceServer).GetDownloadLocations(ctx, req.(*GetDownloadLocsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChunkStoreService_GetUploadLocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUploadLocsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChunkStoreServiceServer).GetUploadLocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/GetUploadLocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChunkStoreServiceServer).GetUploadLocations(ctx, req.(*GetUploadLocsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChunkStoreService_Rebase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RebaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChunkStoreServiceServer).Rebase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/Rebase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChunkStoreServiceServer).Rebase(ctx, req.(*RebaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChunkStoreService_Root_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChunkStoreServiceServer).Root(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/Root",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChunkStoreServiceServer).Root(ctx, req.(*RootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChunkStoreService_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChunkStoreServiceServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChunkStoreServiceServer).Commit(ctx, req.(*CommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChunkStoreService_ListTableFiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTableFilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChunkStoreServiceServer).ListTableFiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dolt.services.remotesapi.v1alpha1.ChunkStoreService/ListTableFiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChunkStoreServiceServer).ListTableFiles(ctx, req.(*ListTableFilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChunkStoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dolt.services.remotesapi.v1alpha1.ChunkStoreService",
	HandlerType: (*ChunkStoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRepoMetadata",
			Handler:    _ChunkStoreService_GetRepoMetadata_Handler,
		},
		{
			MethodName: "HasChunks",
			Handler:    _ChunkStoreService_HasChunks_Handler,
		},
		{
			MethodName: "GetDownloadLocations",
			Handler:    _ChunkStoreService_GetDownloadLocations_Handler,
		},
		{
			MethodName: "GetUploadLocations",
			Handler:    _ChunkStoreService_GetUploadLocations_Handler,
		},
		{
			MethodName: "Rebase",
			Handler:    _ChunkStoreService_Rebase_Handler,
		},
		{
			MethodName: "Root",
			Handler:    _ChunkStoreService_Root_Handler,
		},
		{
			MethodName: "Commit",
			Handler:    _ChunkStoreService_Commit_Handler,
		},
		{
			MethodName: "ListTableFiles",
			Handler:    _ChunkStoreService_ListTableFiles_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dolt/services/remotesapi/v1alpha1/chunkstore.proto",
}
