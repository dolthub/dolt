/*
 * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License, version 2.0,
 * as published by the Free Software Foundation.
 *
 * This program is also distributed with certain software (including
 * but not limited to OpenSSL) that is licensed under separate terms,
 * as designated in a particular file or component or in included license
 * documentation.  The authors of MySQL hereby grant you an additional
 * permission to link the program and your derivative works with the
 * separately licensed software that they have included with MySQL.
 *  
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License, version 2.0, for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA
 */
syntax = "proto2";

// ifdef PROTOBUF_LITE: option optimize_for = LITE_RUNTIME;

package Mysqlx.Datatypes;
option java_package = "com.mysql.cj.x.protobuf";


// a scalar
message Scalar {
  // a string with a charset/collation
  message String {
    required bytes value = 1;
    optional uint64 collation = 2 /* ifdef PROTOBUF3 [jstype = JS_STRING] */;
  };

  // an opaque octet sequence, with an optional content_type
  // See ``Mysqlx.Resultset.ContentType_BYTES`` for list of known values.
  message Octets {
    required bytes value = 1;
    optional uint32 content_type = 2;
  };

  enum Type {
    V_SINT = 1;
    V_UINT = 2;
    V_NULL = 3;
    V_OCTETS = 4;
    V_DOUBLE = 5;
    V_FLOAT = 6;
    V_BOOL  = 7;
    V_STRING  = 8;
  };

  required Type type = 1;

  optional sint64 v_signed_int = 2 /* ifdef PROTOBUF3 [jstype = JS_STRING] */;
  optional uint64 v_unsigned_int = 3 /* ifdef PROTOBUF3 [jstype = JS_STRING] */;
  // 4 is unused, was Null which doesn't have a storage anymore
  optional Octets v_octets = 5;
  optional double v_double = 6;
  optional float  v_float = 7;
  optional bool   v_bool = 8;
  optional String v_string = 9;
}

// a object
message Object {
  message ObjectField {
    required string key = 1;
    required Any value = 2;
  }

  repeated ObjectField fld = 1;
}

// a Array
message Array {
  repeated Any value = 1;
}

// a helper to allow all field types
message Any {
  enum Type {
    SCALAR = 1;
    OBJECT = 2;
    ARRAY  = 3;
  };

  required Type type = 1;

  optional Scalar scalar = 2;
  optional Object obj    = 3;
  optional Array  array  = 4;
}

